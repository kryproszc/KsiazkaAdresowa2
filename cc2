@reactive.Effect
def update_ratios():
    user_data.modal_html.set(HTML(""))  # Wyczyść ewentualny poprzedni komunikat

    try:
        data_list = user_data.reactive_data_paid_list.get()
        if not data_list or data_list[-1] is None:
            user_data.ratio_df_p.set(None)
            user_data.binary_df_p.set(None)
            return

        df = data_list[-1]
        ratio_df = calculate_ratios_vectorized(df)

        if ratio_df is None or ratio_df.empty:
            raise ValueError("Nie można wyliczyć współczynników: wynik jest pusty.")

        bin_df = create_binary_df(ratio_df)
        user_data.ratio_df_p.set(ratio_df)
        user_data.binary_df_p.set(bin_df)

        if user_data.dev_all_initial.get() is None:
            dev_all = calculator.calculate_dev(df, bin_df, ratio_df)
            user_data.dev_all_initial.set(dev_all)

    except Exception as e:
        user_data.ratio_df_p.set(None)
        user_data.binary_df_p.set(None)
        show_info_modal(f"❌ Błąd podczas przetwarzania Paid: {e}", error=True)





@reactive.Effect
def update_ratios_incurred():
    user_data.modal_html.set(HTML(""))  # Wyczyść komunikat

    try:
        data_list = user_data.reactive_data_incurred_list.get()
        if not data_list or data_list[-1] is None:
            user_data.ratio_df_i.set(None)
            user_data.binary_df_i.set(None)
            return

        df = data_list[-1]
        ratio_df = calculate_ratios_vectorized(df)

        if ratio_df is None or ratio_df.empty:
            raise ValueError("Nie można wyliczyć współczynników: wynik jest pusty.")

        bin_df = create_binary_df(ratio_df)
        user_data.ratio_df_i.set(ratio_df)
        user_data.binary_df_i.set(bin_df)

        if user_data.dev_all_initial_i.get() is None:
            dev_all = calculator.calculate_dev(df, bin_df, ratio_df)
            user_data.dev_all_initial_i.set(dev_all)

    except Exception as e:
        user_data.ratio_df_i.set(None)
        user_data.binary_df_i.set(None)
        show_info_modal(f"❌ Błąd podczas przetwarzania Incurred: {e}", error=True)
